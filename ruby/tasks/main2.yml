---
# Ruby app enviroment preparation

- name: "Install dependecies for ruby and rbenv"
  ansible.builtin.yum:
    name:
      - git-core
      - zlib
      - zlib-devel
      - gcc-c++
      - patch
      - readline
      - readline-devel
      - libyaml-devel
      - libffi-devel
      - openssl-devel
      - make
      - bzip2
      - autoconf
      - automake
      - libtool
      - bison
      - curl
      - sqlite-devel
    state: latest
    update_cache: true

- name: "Clone rbenv from github"
  ansible.builtin.git:
    repo: 'https://github.com/rbenv/rbenv.git'
    dest: /home/{{ ansible_user }}/.rbenv
  become_user: "{{ ansible_user }}"

- name: "Add lines for lunch and install rbenv"
  blockinfile:
    path: "/home/{{ ansible_user }}/.bash_profile"
    insertafter: "# User specific aliases and functions"
    block: |
        export PATH="$HOME/.rbenv/bin:$PATH"
        eval "$(rbenv init -)"
        export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
  
- name: "Clone ruby from github"
  ansible.builtin.git:
    repo: 'https://github.com/rbenv/ruby-build.git'
    dest: /home/{{ ansible_user }}/.rbenv/plugins/ruby-build
  become_user: "{{ ansible_user }}"

- name: "Reload .bash_profile"
  ansible.builtin.shell:
    cmd: source /home/{{ ansible_user }}/.bash_profile
  become_user: "{{ ansible_user }}"

- name: "Ensure ruby app exitst"
  stat:
    path: "/home/{{ ansible_user }}/.rbenv/versions/2.7.6"
  register: ruby_dir
    
- name: "Install ruby v 2.7.6"
  ansible.builtin.shell:
    cmd: /home/{{ ansible_user }}/.rbenv/bin/rbenv install -v 2.7.6
  become_user: "{{ ansible_user }}"
  when: not ruby_dir.stat.exists

- name: "Set ruby v 2.7.6 by global"
  ansible.builtin.shell:
    cmd: /home/{{ ansible_user }}/.rbenv/bin/rbenv global 2.7.6
  become_user: "{{ ansible_user }}"

- name: "Install bundle"
  community.general.gem:
    name: bundle
    state: latest
  







    





                    

